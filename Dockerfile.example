################################################################################
#                            STEP 1. Build plugins                             #
################################################################################

# Golang alpine, version must match main service's version
FROM golang:1.16.2-alpine AS plugins-builder

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# Ca-certificates are required to call HTTPS endpoints
RUN apk update && apk add --no-cache gcc libc-dev git ca-certificates && update-ca-certificates

WORKDIR $GOPATH/src/github.com/cert-lv/graphoscope

COPY pdk     ./pdk
COPY plugins ./plugins
COPY go.mod  ./
COPY go.sum  ./

# Fetch dependencies
RUN go get -d ./pdk/...
RUN go get -d ./plugins/src/...

# CGO_ENABLED=1 is required for the Golang plugins
ENV CGO_ENABLED=1 GOOS=linux GOARCH=amd64

# Build plugins
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/elasticsearch.v7.so plugins/src/elasticsearch.v7/*.go
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/http.so             plugins/src/http/*.go
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/mongodb.so          plugins/src/mongodb/*.go
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/pastelyzer.so       plugins/src/pastelyzer/*.go
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/postgresql.so       plugins/src/postgresql/*.go
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/mysql.so            plugins/src/mysql/*.go
RUN go build -buildmode=plugin -ldflags="-w" -o /go/plugins/file-csv.so         plugins/src/file/csv/*.go
RUN CGO_CFLAGS="-g -O2 -Wno-return-local-addr" go build -buildmode=plugin -ldflags="-w" -o /go/plugins/sqlite.so plugins/src/sqlite/*.go


################################################################################
#                     STEP 2. Build the executable binary                      #
################################################################################
FROM golang:1.16.2-alpine

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# ca-certificates is required to call HTTPS endpoints
RUN apk update && apk add --no-cache gcc libc-dev git ca-certificates && update-ca-certificates

WORKDIR $GOPATH/src/github.com/cert-lv/graphoscope

COPY *.go ./
COPY pdk ./pdk
COPY go.mod ./
COPY go.sum ./

# Fetch dependencies
RUN go get -d .

# CGO_ENABLED=1 is required for the Golang plugins
ENV CGO_ENABLED=1 GOOS=linux GOARCH=amd64

# Build the binary
RUN go build -ldflags="-w -s" -a -o /go/graphoscope .
